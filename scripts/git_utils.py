import os
import git
import shutil
from colorama import init, Fore

init(autoreset=True)

def create_path(path, added):
    return os.path.join(path, added)

def create_local_repo(local_path):
    if local_path == "":
        local_path = os.path.dirname(os.path.abspath(__file__))
    try:
        os.mkdir(local_path)
        print(Fore.GREEN + f'[SUCCESS - LOCAL CREATED] {local_path} created successfully')
    except FileExistsError:
        print(Fore.RED + f'[ERROR] {local_path} already exists')

def remove_local(container_path, repo_name):
    local_path = create_path(container_path, repo_name)
    try:
        if os.path.exists(local_path):
            shutil.rmtree(local_path)
            print(Fore.GREEN + f'[SUCCESS - LOCAL DELETED] {local_path} has been deleted')
    except Exception as e:
        print(Fore.RED + f'[ERROR] {e}')

def git_commit(local_path, readme_path):
    commitMessage = "[COMMIT AUTO GENERATED BY GITREPOS]"
    try:
        repo = git.Repo(local_path)
        repo.index.add(readme_path)
        repo.index.commit(commitMessage)
        print(Fore.GREEN + f'[SUCCESS - README COMMITED] {readme_path} commited successfully')
    except Exception as e:
        print(Fore.RED + f'[ERROR] GIT COMMIT Failed to perform Git operation {e}')
